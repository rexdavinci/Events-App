{"version":3,"sources":["context/auth-context.js","pages/Auth.js","components/Modal/Modal.js","components/Backdrop/Backdrop.js","components/Events/EventItem/EventItem.js","components/Events/EventList/EventList.js","components/Spinner/Spinner.js","pages/Events.js","pages/Home.js","components/Bookings/BookingList/BookingList.js","components/Bookings/BookingChart/BookingChart.js","components/Bookings/BookingsControl/BookingsControl.js","pages/Booking.js","components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","AuthPage","login","useContext","useState","isLogin","setLogin","emailEl","createRef","passwordEl","className","onSubmit","e","a","async","preventDefault","email","current","value","trim","toLowerCase","password","length","alert","requestBody","query","variables","fetch","method","body","JSON","stringify","headers","request","json","response","info","data","loginUser","createUser","errors","message","loginOrRegister","action","loginInfo","token","id","htmlFor","type","ref","onClick","Modal","props","title","children","canCancel","onCancel","canConfirm","confirmText","onConfirm","Backdrop","EventItem","userId","key","eventId","price","Date","date","toLocaleString","time","onDetail","creatorId","EventList","events","map","event","creator","onViewDetail","Spinner","Events","context","creating","setCreating","setEvents","isLoading","setLoading","selectedEvent","setSelectedEvent","titleEl","priceEl","dateEl","timeEl","descriptionEl","ModalCancelHandler","useEffect","status","Error","getEvents","description","prevEvents","createEvent","defaultValue","rows","console","log","currentEvent","find","HomePage","Fragment","BookingList","bookings","booking","bookedEvent","createdAt","onDelete","BOOKINGS_BUCKET","min","max","BookingChart","chartData","labels","datasets","values","bucket","filteredBookingsCount","reduce","prev","push","backgroundColor","borderColor","style","textAlign","BookingsControl","activeOutputType","changeOutput","BookingPage","setBookings","outPutType","setOutPutType","getBookings","useCallback","cancelBooking","remainder","filter","prevState","MainNavigation","logout","color","to","App","path","component","exact","from","EventPage","position","bottom","target","rel","href","ReactDOM","render","state","setState","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.de1ad9d9.chunk.js","sourcesContent":["import React, {createContext, useState} from 'react'\r\n\r\nexport const AuthContext = createContext()\r\n\r\nexport default function AuthContextProvider ({children}){\r\n  const [state, setState] = useState({\r\n    token: null,\r\n    userId: null,\r\n    email: null\r\n  })\r\n\r\n  const login = (token, userId, email) => {\r\n    setState({token: token, userId: userId, email: email})\r\n  }\r\n\r\n  const logout = () => {\r\n    setState({token: null, userId: null, email: null})\r\n  }\r\n\r\n\r\n  return(\r\n    <AuthContext.Provider value={\r\n      {\r\n        token: state.token,\r\n        userId:state.userId,\r\n        email: state.email,\r\n        login:login,\r\n        logout:logout\r\n      }\r\n    }>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","import React, {useState, createRef, useContext} from 'react';\r\nimport './Auth.css'\r\nimport { AuthContext } from '../context/auth-context';\r\n\r\nconst AuthPage = () => {\r\n  const { login } = useContext(AuthContext)\r\n  const [isLogin, setLogin] = useState(true)\r\n  const emailEl = createRef()\r\n  const passwordEl = createRef()\r\n  const switchMode = () => {\r\n    setLogin(!isLogin)\r\n  }\r\n\r\n  \r\n  const submit = async e => {\r\n    e.preventDefault()\r\n    const email = emailEl.current.value.trim().toLowerCase()\r\n    const password = passwordEl.current.value.trim()\r\n    if(email.length === 0  || password.length === 0){\r\n      alert('Password and email cannot be empty')\r\n    }\r\n\r\n    let requestBody = {\r\n      query: `\r\n        query Login($email: String!, $password: String!){\r\n          login(email: $email, password: $password){\r\n            id\r\n            email\r\n            loginInfo {\r\n              userId\r\n              token\r\n              tokenExpiration\r\n            }\r\n            events {\r\n              title\r\n              description\r\n              price\r\n              date\r\n            }\r\n            myBookings {\r\n              bookedEvent {\r\n                title\r\n                price\r\n                description\r\n                date\r\n              }\r\n            }\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        email, password\r\n      }\r\n    }\r\n    \r\n    if (!isLogin) {\r\n      requestBody = {\r\n        query: `\r\n          mutation CreateUser($email: String!, $password: String!) {\r\n            createUser(userInput: {email: $email, password: $password}){\r\n              id\r\n              email\r\n              loginInfo {\r\n                userId\r\n                token\r\n                tokenExpiration\r\n              }\r\n              events {\r\n                title\r\n                description\r\n                price\r\n                date\r\n              }\r\n              myBookings {\r\n                id\r\n                bookedEvent {\r\n                  title\r\n                  price\r\n                  date\r\n                  description\r\n                }\r\n              }\r\n            }\r\n          }\r\n        `,\r\n        variables:{\r\n          email: email,\r\n          password: password\r\n        }\r\n      }\r\n    }\r\n\r\n    try {\r\n      const request = await fetch('http://localhost:5500/graphql', {\r\n        method: 'POST',\r\n        body: JSON.stringify(requestBody),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      const response = await request.json()\r\n      const info = response.data  \r\n      const { login: loginUser } = info\r\n      const { createUser } = info\r\n      if(response.errors){\r\n        alert(response.errors[0].message)\r\n      }\r\n      const loginOrRegister = action => {\r\n        return login(action.loginInfo.token, action.id, action.email)\r\n      }\r\n      if(loginUser){\r\n        loginOrRegister(loginUser)\r\n      }\r\n      if(createUser){\r\n        loginOrRegister(createUser)\r\n      }\r\n    }catch(err){\r\n      return err\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <form className = \"auth-form\" onSubmit = {submit}>\r\n      <div className = \"form-control\">\r\n        <label htmlFor = \"email\">E-mail:</label>\r\n        <input type=\"email\" id =\"email\" ref = {emailEl}/>\r\n      </div>\r\n      <div className = \"form-control\">\r\n        <label htmlFor = \"password\"> Password:</label>\r\n        <input type = \"password\" id=\"password\" ref = {passwordEl}/>\r\n      </div>\r\n      <div className = \"form-actions\" >\r\n        <button type = \"submit\" > {\r\n          !isLogin ? 'Signup' : 'Login'\r\n        } </button>\r\n        <button type = \"button\" onClick = {switchMode}>\r\n        Switch to {\r\n          isLogin ? 'Signup' : 'Login'\r\n        }</button>\r\n      </div>\r\n      </form>\r\n  );\r\n}\r\n\r\nexport default AuthPage;","import React from 'react'\r\nimport './Modal.css'\r\nconst Modal = (props) => {\r\n  return (\r\n    <div className=\"modal\">\r\n      <header className=\"modal__header\">\r\n        <h1>{props.title}</h1>\r\n      </header>\r\n      <section className=\"modal__content\">\r\n        {props.children}\r\n      </section>\r\n      <section className=\"modal__actions\">\r\n        {props.canCancel && <button className=\"btn\" onClick={props.onCancel}>Cancel</button>}\r\n        {(props.canConfirm && props.confirmText) && <button className=\"btn\" onClick={props.onConfirm}>\r\n        {props.confirmText}\r\n        </button>}\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import React from 'react'\r\nimport './Backdrop.css'\r\n\r\nconst Backdrop = (props) => {\r\n  return (\r\n    <div className=\"backdrop\">\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Backdrop\r\n","import React, {useContext} from 'react'\r\nimport './EventItem.css'\r\nimport { AuthContext } from '../../../context/auth-context'\r\n\r\nconst EventItem = (props) => {\r\n  const { userId } = useContext(AuthContext)\r\n  return (\r\n    <>\r\n      <li key={props.eventId} className=\"event__list-item\">\r\n        <div>\r\n          <h1>{props.title}</h1>\r\n          <h2>${props.price} - {new Date(props.date).toLocaleString()}</h2>\r\n          <p>{props.time}</p>\r\n        </div>\r\n        <div>\r\n          <button className=\"btn\" onClick={()=> props.onDetail(props.eventId)}>View Details</button>\r\n        </div>\r\n        <div>\r\n        {\r\n          userId === props.creatorId ?\r\n          <p>You are the owner of this event</p> :\r\n          <button className=\"btn\" onClick={()=> props.onDetail(props.eventId)}>Book Event</button>\r\n        }\r\n        </div>\r\n      </li>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EventItem","import React from 'react'\r\nimport './EventList.css'\r\nimport EventItem from '../EventItem/EventItem';\r\nconst EventList = (props) => {\r\n  const events = props.events.map(event=>{\r\n    return(\r\n      <EventItem\r\n        key={event.id}\r\n        eventId={event.id}\r\n        title={event.title}\r\n        creatorId={event.creator.id}\r\n        price={event.price}\r\n        date={event.date}\r\n        time={event.time}\r\n        onDetail={props.onViewDetail}\r\n        />\r\n    )\r\n  })\r\n  return (\r\n    <ul className=\"event__list\">\r\n      {events}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default EventList","import React from 'react'\r\n\r\nimport './Spinner.css'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","import React, { useState, createRef, useContext, useEffect } from 'react'\r\nimport './Events.css'\r\nimport Modal from '../components/Modal/Modal';\r\nimport Backdrop from '../components/Backdrop/Backdrop';\r\nimport { AuthContext } from '../context/auth-context';\r\nimport EventList from '../components/Events/EventList/EventList';\r\nimport Spinner from '../components/Spinner/Spinner';\r\n\r\nconst Events = () => {\r\n  const context = useContext(AuthContext)\r\n  const [creating, setCreating] = useState(false)\r\n  const [events, setEvents] = useState([])\r\n  const [isLoading, setLoading] = useState(false)\r\n  const [selectedEvent, setSelectedEvent] = useState(null)\r\n  const titleEl = createRef()\r\n  const priceEl = createRef()\r\n  const dateEl = createRef()\r\n  const timeEl = createRef()\r\n  const descriptionEl = createRef()\r\n\r\n  const startCreateEventHandler =()=>{\r\n    setCreating(true)\r\n  }\r\n\r\n  const ModalConfirmHandler = async () => {\r\n    try{\r\n      setCreating(false)\r\n      const title = titleEl.current.value\r\n      const price = +priceEl.current.value\r\n      const date = dateEl.current.value\r\n      const description = descriptionEl.current.value\r\n      const time = timeEl.current.value\r\n\r\n      if (title.trim().length === 0 ||\r\n          price <= 0 ||\r\n          date.trim().length === 0 ||\r\n          time.trim().length === 0 ||\r\n          description.trim().length === 0) {\r\n          return null\r\n      }\r\n\r\n\r\n      const requestBody = {\r\n        query: `\r\n          mutation {\r\n            createEvent(eventInput:{title:\"${title}\", description:\"${description}\", price:${price}, date:\"${date} ${time}\"}){\r\n              id\r\n              description\r\n              title\r\n              price\r\n              date\r\n              bookings {\r\n                booker {\r\n                  email\r\n                }\r\n              }\r\n              creator{\r\n                id\r\n                email\r\n                events{\r\n                  id\r\n                  title\r\n                  description\r\n                  date\r\n                }\r\n              } \r\n            }\r\n          }\r\n        `\r\n      }\r\n\r\n      const request = await fetch('http://localhost:5500/graphql', {\r\n        method: 'POST',\r\n        body: JSON.stringify(requestBody),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer '+ context.token\r\n        }\r\n      })\r\n      const response = await request.json()\r\n      setEvents(prevEvents=>[...prevEvents, response.data.createEvent])\r\n    }catch(err){return err}\r\n  }\r\n\r\n  const ModalCancelHandler = () => {\r\n    setCreating(false)\r\n    setSelectedEvent(null)\r\n  }\r\n\r\n  const bookEventHandler = async() => {\r\n    try{\r\n      if(!context.token){\r\n        setSelectedEvent(null)\r\n        return null\r\n      }\r\n      const requestBody = {\r\n        query: `\r\n          mutation {\r\n            bookEvent(eventId: \"${selectedEvent.id}\"){\r\n              createdAt\r\n              updatedAt\r\n              booker{\r\n                id\r\n                email\r\n                events {\r\n                  id\r\n                  description\r\n                  date\r\n                  title\r\n                  price\r\n                }\r\n              }\r\n              bookedEvent{\r\n                id\r\n                description\r\n                date\r\n                title\r\n                price\r\n                creator{\r\n                  id\r\n                  email\r\n                }\r\n              }\r\n            }\r\n          }\r\n        `\r\n      }\r\n\r\n      const request = await fetch('http://localhost:5500/graphql', {\r\n          method: 'POST',\r\n          body: JSON.stringify(requestBody),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer '+ context.token\r\n          }\r\n        })\r\n        \r\n        const response = await request.json()\r\n        if(response.errors){\r\n          throw Error(response.errors[0].message)\r\n        }\r\n        setSelectedEvent(null)\r\n    }catch(err){\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const showDetailHander = eventId =>{\r\n    const currentEvent = events.find(event=>event.id === eventId)\r\n    setSelectedEvent(currentEvent)\r\n  }\r\n\r\n  const getEvents = async () => {\r\n    try{\r\n      setLoading(true)\r\n      const requestBody = {\r\n        query: `\r\n          query {\r\n            events{\r\n              id\r\n              price\r\n              date\r\n              description\r\n              title\r\n              creator{\r\n                id\r\n                email\r\n              }\r\n              bookings{\r\n                booker{\r\n                  email\r\n                }\r\n              }\r\n            }\r\n          }\r\n        `\r\n      }\r\n      const request = await fetch('http://localhost:5500/graphql', {\r\n        method: 'POST',\r\n        body: JSON.stringify(requestBody),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      if (request.status !== 200 && request.status !== 201) {\r\n        throw new Error('Failed!')\r\n      }\r\n      const response = await request.json()\r\n      setEvents(response.data.events)\r\n      setLoading(false)\r\n    }catch(err){\r\n      setLoading(false) \r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getEvents()\r\n  },[])\r\n\r\n  return (\r\n    <>\r\n    {(creating || selectedEvent) && <Backdrop/>}\r\n      {creating && <Modal confirmText=\"Confirm\" title=\"Add Event\" canConfirm canCancel onCancel={ModalCancelHandler} onConfirm={ModalConfirmHandler}>\r\n        <p>Modal Content</p>\r\n        <form>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" ref={titleEl}/>\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"price\">Price</label>\r\n            <input type=\"number\" id=\"price\" ref={priceEl}/>\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"date\">Date</label>\r\n            <input type=\"date\" id=\"date\" ref={dateEl}/>\r\n            <input type=\"time\" id=\"time\" ref={timeEl} defaultValue=\"13:30\"/>\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"description\">Description</label>\r\n            <textarea id=\"description\" rows=\"4\" ref={descriptionEl}/>\r\n          </div>\r\n        </form>\r\n      </Modal>}\r\n\r\n      {selectedEvent && (\r\n        <Modal confirmText={context.token ? \"Book\" : null} title={selectedEvent.title} canConfirm canCancel onCancel={ModalCancelHandler} onConfirm={bookEventHandler}>\r\n          <h1>{selectedEvent.title}</h1>\r\n          <h3>Date: {new Date(selectedEvent.date).toLocaleString()}</h3>\r\n          <p>Price: <em>${selectedEvent.price}</em> </p>\r\n          <p>\r\n            Detail:\r\n          </p>\r\n          <p>{selectedEvent.description}</p>\r\n          <p>{selectedEvent.time}</p>\r\n        </Modal>)\r\n      }\r\n\r\n      {context.token && <div className=\"events-control\">\r\n        <p>Share Your Events</p>\r\n        <button className=\"btn\" onClick={startCreateEventHandler}>Create Event</button>\r\n      </div>}\r\n      { \r\n        isLoading ? (\r\n        <Spinner/>\r\n        ): (\r\n        <EventList events={events} onViewDetail={showDetailHander}/>\r\n        )\r\n      }      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Events\r\n","import React from 'react';\r\n\r\nconst HomePage = () => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h1>Welcome to Easy Events</h1>\r\n\t\t\t<small>Create and manage your events easily</small>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react'\r\nimport './BookingList.css'\r\n\r\nconst BookingList = props => {\r\n  return (\r\n    <ul className=\"bookings__list\">\r\n    {props.bookings.length > 0 ? props.bookings.map(booking => {\r\n      return (\r\n        <li key={booking.id} className=\"bookings__item\">\r\n          <div className=\"bookings__item-data\">\r\n            <small>$ {booking.bookedEvent.price}</small>\r\n            {booking.bookedEvent.title} - {' '}\r\n            {new Date(booking.createdAt).toLocaleString()}\r\n          </div>\r\n          <div className=\"bookings__item-actions\">\r\n            <button className=\"btn\" onClick={()=>props.onDelete(booking.id)}>Cancel</button>\r\n          </div>\r\n        </li>\r\n      );\r\n    }) :\r\n      <p>You have not booked any event yet</p>\r\n    }\r\n  </ul>\r\n  );\r\n}\r\n\r\nexport default BookingList","import React from 'react'\r\nimport { Bar } from 'react-chartjs-2'\r\n\r\nconst BOOKINGS_BUCKET = {\r\n  'Cheap': {\r\n    min: 0,\r\n    max: 100\r\n  },\r\n  'Normal': {\r\n    min: 100,\r\n    max: 200\r\n  },\r\n  'Expensive': {\r\n    min: 200,\r\n    max: 1000000\r\n  }\r\n}\r\n\r\nconst BookingChart = props => {\r\n  const chartData = { labels: [], datasets: []}\r\n  let values = []\r\n  for (const bucket in BOOKINGS_BUCKET) {\r\n    const filteredBookingsCount = props.bookings.reduce((prev, current) => {\r\n      if(current.bookedEvent.price > BOOKINGS_BUCKET[bucket].min && current.bookedEvent.price < BOOKINGS_BUCKET[bucket].max){\r\n        return prev + 1\r\n      }else{\r\n        return prev\r\n      }\r\n    }, 0)\r\n    values.push(filteredBookingsCount)\r\n    chartData.labels.push(bucket)\r\n    chartData.datasets.push({\r\n      backgroundColor: 'rgb(255, 99, 132)',\r\n      borderColor: 'rgb(255, 99, 132)',\r\n      data: [...values]\r\n    })\r\n    values = [...values]\r\n    values[values.length - 1] = 0\r\n  }\r\n\r\n  return (\r\n    <div style={{textAlign: 'center'}}>\r\n      <Bar\r\n        data={chartData}\r\n      />\r\n    </div>  \r\n  )\r\n}\r\n\r\nexport default BookingChart\r\n","import React from 'react'\r\nimport './BookingsControl.css'\r\n\r\nconst BookingsControl = props => {\r\n  return (\r\n    <div className='bookings-control'>\r\n      <button className={props.activeOutputType === 'list' ? 'active' : ''} onClick={()=>props.changeOutput('list')}>List</button>\r\n      <button className={props.activeOutputType === 'chart' ? 'active' : ''} onClick={()=>props.changeOutput('chart')}>Chart</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BookingsControl\r\n","import React, { useState, useEffect, useContext, useCallback } from 'react'\r\nimport { AuthContext } from '../context/auth-context';\r\nimport Spinner from '../components/Spinner/Spinner';\r\nimport BookingList from '../components/Bookings/BookingList/BookingList';\r\nimport BookingChart from '../components/Bookings/BookingChart/BookingChart';\r\nimport BookingsControl from '../components/Bookings/BookingsControl/BookingsControl';\r\n\r\nconst BookingPage = () => {\r\n  const [isLoading, setLoading] = useState(false)\r\n  const [bookings, setBookings] = useState([])\r\n  const [outPutType, setOutPutType] = useState('list')\r\n  const context = useContext(AuthContext)\r\n\r\n  const getBookings = useCallback(async()=>{\r\n    try{\r\n      setLoading(true)\r\n      const requestBody = {\r\n        query: `\r\n          query {\r\n            bookings{\r\n              id\r\n              createdAt\r\n              updatedAt\r\n              booker{\r\n                id\r\n                events{\r\n                  description\r\n                }\r\n              }\r\n              bookedEvent{\r\n                id\r\n                title\r\n                date\r\n                price\r\n              }\r\n            }\r\n          }\r\n        `\r\n      }\r\n\r\n      const request = await fetch('http://localhost:5500/graphql', {\r\n        method: 'POST',\r\n        body: JSON.stringify(requestBody),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer '+ context.token\r\n        }\r\n      })\r\n      if (request.status !== 200 && request.status !== 201) {\r\n        throw new Error('Failed!')\r\n      }\r\n      const response = await request.json()\r\n      setBookings(response.data.bookings)\r\n      setLoading(false)\r\n    }catch(err){\r\n      setLoading(false) \r\n      return err\r\n    }\r\n  }, [context.token])\r\n\r\n  useEffect(() => {\r\n    getBookings()\r\n    return(()=>null)\r\n  }, [getBookings])\r\n\r\n  \r\n\r\n  const cancelBooking = async id =>{\r\n    const remainder = bookings.filter(booking=>booking.id !== id)\r\n    console.log(remainder)\r\n    const requestBody = {\r\n      query: `\r\n        mutation {\r\n          cancelBooking(bookingId: \"${id}\"){\r\n            title\r\n            creator{\r\n              email\r\n            }\r\n          }\r\n        }\r\n      `\r\n    }\r\n    try {\r\n      const request = await fetch('http://localhost:5500/graphql', {\r\n          method: 'POST',\r\n          body: JSON.stringify(requestBody),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer '+ context.token\r\n          }\r\n        })\r\n\r\n        if (request.status !== 200 && request.status !== 201) {\r\n          throw new Error('Failed!')\r\n        }\r\n        \r\n        await request.json()\r\n        setBookings(prevState => prevState.filter(booking=>booking.id !== id))\r\n      }catch(err){\r\n      return err\r\n    }\r\n  }\r\n\r\n  const changeOutput = type => {\r\n    if(type === 'list') {\r\n      setOutPutType('list')\r\n    } else{\r\n      setOutPutType('chart')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n          {\r\n            isLoading ? \r\n            <Spinner /> : \r\n            <>\r\n              <BookingsControl changeOutput={changeOutput} activeOutputType={outPutType}/>\r\n              {\r\n                outPutType === 'list' ?\r\n                <BookingList bookings={bookings} onDelete={cancelBooking}/> :\r\n                <BookingChart bookings={bookings} onDelete={cancelBooking}/>\r\n              }\r\n            </>\r\n          }\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BookingPage\r\n","import React, {useContext} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './MainNavigation.css';\r\nimport { AuthContext } from '../../context/auth-context';\r\n\r\nconst MainNavigation = () => {\r\n  const {token, logout, email} = useContext(AuthContext)\r\n  \r\n  return (\r\n    <header className=\"main-navigation\">\r\n      <div className=\"main-navigation__logo\">\r\n        <h1>EasyEvent</h1>\r\n      </div>\r\n      <nav className=\"main-navigation__items\">\r\n        <ul>\r\n          {token && <li style={{color: 'white'}}>\r\n            Hello {email}\r\n          </li>}\r\n          {!token && <li>\r\n            <NavLink to=\"/auth\">Login / Signup</NavLink>\r\n          </li>}\r\n          <li>\r\n            <NavLink to=\"/events\">Events</NavLink>\r\n          </li>\r\n          {token && \r\n            <>\r\n              <li>\r\n                <NavLink to=\"/bookings\">Bookings</NavLink>\r\n              </li>\r\n              <li>\r\n                <button onClick={logout}>Logout</button>\r\n              </li>\r\n            </>\r\n          }\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  )\r\n};\r\n\r\nexport default MainNavigation;","import React, { useContext } from 'react';\r\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom'\r\nimport './App.css';\r\nimport AuthPage from './pages/Auth';\r\nimport EventPage from './pages/Events';\r\nimport HomePage from './pages/Home';\r\nimport BookingPage from './pages/Booking';\r\nimport MainNavigation from './components/Navigation/MainNavigation';\r\nimport { AuthContext } from './context/auth-context';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst App = () => {\r\n  const { token } = useContext(AuthContext)\r\n  \r\n  return (\r\n    <Router>\r\n      <>\r\n        <MainNavigation />\r\n        <main className=\"main-content\">\r\n          <Switch>\r\n            <Route path='/' component={HomePage} exact/>\r\n            {token && <Redirect from='/auth' to='/events' exact/>}\r\n            {!token && <Route path='/auth' component={AuthPage}/> }\r\n            <Route path='/events' component={EventPage}/>\r\n            {token && <Route path='/bookings' component={BookingPage}/>}\r\n            {!token && <Redirect from='/bookings' to='/events' exact/>}\r\n        </Switch>\r\n        <p style={{position: \"absolute\", bottom: \"5px\"}}> By: <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://abdhafizahmed.com\">Abdulhafiz Ahmed</a> </p>\r\n        </main>\r\n        </>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport AuthContextProvider from './context/auth-context';\r\n\r\n\r\nReactDOM.render(\r\n  <AuthContextProvider>\r\n    <App />\r\n  </AuthContextProvider>,\r\n  \r\ndocument.getElementById('root'));\r\n\r\n"],"sourceRoot":""}